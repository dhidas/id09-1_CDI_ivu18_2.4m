// Encoder (not used for motor)
EncTable[0].CosBias=0
EncTable[0].CoverSerror=0
EncTable[0].index1=0
EncTable[0].index2=0
EncTable[0].index3=0
EncTable[0].index4=0
EncTable[0].index5=0
EncTable[0].index6=0
EncTable[0].MaxDelta=0
EncTable[0].pEnc=Sys.pushm
EncTable[0].pEnc1=Sys.pushm
EncTable[0].ScaleFactor=0
EncTable[0].SinBias=0
EncTable[0].TanHalfPhi=0
EncTable[0].type=1



// Motor #1 Linear Encoder
EncTable[1].CosBias=0
EncTable[1].CoverSerror=0
EncTable[1].index1=0
EncTable[1].index2=0
EncTable[1].index3=0
EncTable[1].index4=0
EncTable[1].index5=0
EncTable[1].index6=0
EncTable[1].MaxDelta=0
EncTable[1].pEnc=Acc84E[0].chan[0].SerialEncDataA.a
EncTable[1].pEnc1=Acc84E[0].chan[0].SerialEncDataB.a
EncTable[1].ScaleFactor=1
EncTable[1].SinBias=0
EncTable[1].TanHalfPhi=0
EncTable[1].type=2

// Motor #2 Linear Encoder
EncTable[2].CosBias=0
EncTable[2].CoverSerror=0
EncTable[2].index1=0
EncTable[2].index2=0
EncTable[2].index3=0
EncTable[2].index4=0
EncTable[2].index5=0
EncTable[2].index6=0
EncTable[2].MaxDelta=0
EncTable[2].pEnc=Acc84E[0].chan[1].SerialEncDataA.a
EncTable[2].pEnc1=Acc84E[0].chan[1].SerialEncDataB.a
EncTable[2].ScaleFactor=1
EncTable[2].SinBias=0
EncTable[2].TanHalfPhi=0
EncTable[2].type=2

// Motor #3 Linear Encoder
EncTable[3].CosBias=0
EncTable[3].CoverSerror=0
EncTable[3].index1=0
EncTable[3].index2=0
EncTable[3].index3=0
EncTable[3].index4=0
EncTable[3].index5=0
EncTable[3].index6=0
EncTable[3].MaxDelta=0
EncTable[3].pEnc=Acc84E[0].chan[2].SerialEncDataA.a
EncTable[3].pEnc1=Acc84E[0].chan[2].SerialEncDataB.a
EncTable[3].ScaleFactor=-1
EncTable[3].SinBias=0
EncTable[3].TanHalfPhi=0
EncTable[3].type=2

// Motor #4 Linear Encoder
EncTable[4].CosBias=0
EncTable[4].CoverSerror=0
EncTable[4].index1=0
EncTable[4].index2=0
EncTable[4].index3=0
EncTable[4].index4=0
EncTable[4].index5=0
EncTable[4].index6=0
EncTable[4].MaxDelta=0
EncTable[4].pEnc=Acc84E[0].chan[3].SerialEncDataA.a
EncTable[4].pEnc1=Acc84E[0].chan[3].SerialEncDataB.a
EncTable[4].ScaleFactor=1
EncTable[4].SinBias=0
EncTable[4].TanHalfPhi=0
EncTable[4].type=2





// Motor #1 Rotary Encoder
EncTable[5].CosBias=0
EncTable[5].CoverSerror=0
EncTable[5].index1=0
EncTable[5].index2=0
EncTable[5].index3=0
EncTable[5].index4=0
EncTable[5].index5=0
EncTable[5].index6=0
EncTable[5].MaxDelta=0
EncTable[5].pEnc=Acc24E3[0].Chan[0].ServoCapt.a
EncTable[5].pEnc1=Sys.pushm
EncTable[5].ScaleFactor=1/256
EncTable[5].SinBias=0
EncTable[5].TanHalfPhi=0
EncTable[5].type=1

// Motor #2 Rotary Encoder
EncTable[6].CosBias=0
EncTable[6].CoverSerror=0
EncTable[6].index1=0
EncTable[6].index2=0
EncTable[6].index3=0
EncTable[6].index4=0
EncTable[6].index5=0
EncTable[6].index6=0
EncTable[6].MaxDelta=0
EncTable[6].pEnc=Acc24E3[0].Chan[1].ServoCapt.a
EncTable[6].pEnc1=Sys.pushm
EncTable[6].ScaleFactor=1/256
EncTable[6].SinBias=0
EncTable[6].TanHalfPhi=0
EncTable[6].type=1

// Motor #3 Rotary Encoder
EncTable[7].CosBias=0
EncTable[7].CoverSerror=0
EncTable[7].index1=0
EncTable[7].index2=0
EncTable[7].index3=0
EncTable[7].index4=0
EncTable[7].index5=0
EncTable[7].index6=0
EncTable[7].MaxDelta=0
EncTable[7].pEnc=Acc24E3[0].Chan[2].ServoCapt.a
EncTable[7].pEnc1=Sys.pushm
EncTable[7].ScaleFactor=1/256
EncTable[7].SinBias=0
EncTable[7].TanHalfPhi=0
EncTable[7].type=1

// Motor #4 Rotary Encoder
EncTable[8].CosBias=0
EncTable[8].CoverSerror=0
EncTable[8].index1=0
EncTable[8].index2=0
EncTable[8].index3=0
EncTable[8].index4=0
EncTable[8].index5=0
EncTable[8].index6=0
EncTable[8].MaxDelta=0
EncTable[8].pEnc=Acc24E3[0].Chan[3].ServoCapt.a
EncTable[8].pEnc1=Sys.pushm
EncTable[8].ScaleFactor=1/256
EncTable[8].SinBias=0
EncTable[8].TanHalfPhi=0
EncTable[8].type=1



// Set default motor following (GU/GD and EU/ED)
Motor[1].pMasterEnc=Motor[2].pEnc
Motor[2].pMasterEnc=Motor[1].pEnc
Motor[3].pMasterEnc=Motor[4].pEnc
Motor[4].pMasterEnc=Motor[3].pEnc
