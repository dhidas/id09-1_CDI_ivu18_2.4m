// Global variable definitions.  Things which need to be known by 
// epics should be in the form of #define statements, otherwise
// use of global is best.

// Global CONSTANTS, of the form kXXXX

// Everyone has to have their slice of the pie
#define kPI 3.141592653589793
#define kDegToRad (kPI/180)
#define kRadToDeg (180/kPI)

// Home offsets (possible use other method for bissc abs)
#define kNMOTORS      6
#define kM1OFFSET 87275
#define kM2OFFSET 49410
#define kM3OFFSET 87387
#define kM4OFFSET 50048
#define kM4OFFSET 50048
#define kM5OFFSET     0
#define kM6OFFSET     0

// Encoder count conversions
#define kEncCtsPerMm        4098.361
#define kEncCtsPerUm        4.098361
#define kRotEncCtsPerRad    180
#define kRotEncCtsPerURad   0.180

// Absolute hard-coded limits in case all else fails
#define kMAXGAP   40200
#define kMINGAP    4530
#define kMAXELEV   5000
#define kMAXTILT    500
#define kMAXTAPER   500

// Unbelievable, but I cannot put comments after define statements in ppmac
// even if I use a terminator which is very very stupid.  So here we are
// and I'll put the comments above it...
// Different modes for motion:
//     Gap and eleation mode combined 4-motor motion
//     Gap and elevation mode separate motions
//     DS following US mode (for both gap and elev)
//     US following DS mode (for both gap and elev)
//     Fully individual mode
//
#define kMoveModeGapEleComb     0
#define kMoveModeGapEleSep      1
#define kMoveModeFollowingUS    2
#define kMoveModeFollowingDS    3
#define kMoveModeIndividual     4
#define kMoveModeFlyScan        5


global gFMOTOR(10);

// Countdown timer definitions are of the form TIMERXXY where XX is
// the PLC number, e.g. PLC06 -> XX = 06 and Y is the timer number
// within that PLC (since some PLCs may use multiple timers).  These
// timers translate to the Sys.CdTimer as Sys.CdTimer[XXY].  These
// timers are meant to be used only in a single PLC.  Global timers
// should be specified as GTIMERY where Y is 0-9

// Global timers
#define GTIMER0  Sys.CdTimer[0]

// Local Timers
#define TIMER060 Sys.CdTimer[60]
#define TIMER061 Sys.CdTimer[61]
#define TIMER070 Sys.CdTimer[70]



// Global definitions for substitution
//#define Mtr1HomeFlag Gate3[0].Chan[0].HomeFlag
//#define Mtr2HomeFlag Gate3[0].Chan[1].HomeFlag
//#define Mtr3HomeFlag Gate3[0].Chan[2].HomeFlag
//#define Mtr4HomeFlag Gate3[0].Chan[3].HomeFlag


// PVariable definitions
// PLC 01 - Startup

// PLC 02 - Movement in progress monitor
#define P_MovementInProgress  P200

// PLC 03 - Mode Change
#define P_MoveMode          P300
#define P_MoveModeReq       P301

// PLC 06 - Homing
#define P_HomeRequest         P600
#define P_HomingInProgress    P601
#define P_MotorHomingNumber   P602
#define P_HomingAmpError      P698
#define P_HomingTimeout       P699

// PLC 08 - Move Request
#define P_StopAllStatus     P800
#define P_InterlockState    P801
#define P_OpenGapExecuting  P802
#define P_BrakeTimeout      P803
#define P_MoveAborted       P804
#define P_GapSetpoint       P805
#define P_ElevSetpoint      P806
#define P_TaperSetpoint     P807
#define P_TiltSetpoint      P808
#define P_GapMoveRequest    P809
#define P_GapSpeed_um       P810
#define P_GapEleMoveRequest P811
#define P_EleMoveRequest    P812
#define P_StopAllRequest    P813

// PLC 09 - Girder Safety
#define P_StopAllStatus       P900
#define P_StopAllRequest      P901
