// This PLC is to deal with the lights
// The sign says:
//    green = Motors and Drives Enabled
//    orange flashing = ID in motion
//    red = FAULT


Open PLC 7

local L_AmpEna = 0
local L_CSRunning = 0
local L_MotorMoving = 0
local L_OLight = 0

local L_AmpRdy = 0	//add kashima

// Let's update about every half second to make life easy
call Timer(0.500)

// Check Amp enable bits
L_AmpEna += Motor[1].AmpEna
L_AmpEna += Motor[2].AmpEna
L_AmpEna += Motor[3].AmpEna
L_AmpEna += Motor[4].AmpEna

L_AmpRdy += inSERVO1READY	//green shows amp is ready. kashima. old ivu.
L_AmpRdy += inSERVO2READY
L_AmpRdy += inSERVO3READY
L_AmpRdy += inSERVO4READY

if (L_AmpEna != 0) {
//if (L_AmpRdy == 4) {
  // Turn on green light
  outBEACONGREEN = kON
} else {
  // turn off green light
  outBEACONGREEN = kOFF
}


if (gMovementInProgress == kTRUE) {
  // toggle orange light
  outBEACONYELLOW = (outBEACONYELLOW + 1) % 2
} else {
  // turn off orange light
  outBEACONYELLOW = kOFF
}


// Check for fault here and turn red light on if needed
//kashima add
gAnyError=0
gAnyError+=gInterlockState
gAnyError+=gHomingAmpError
gAnyError+=gHomingTimeout
gAnyError+=gGapError
gAnyError+=gElevError
gAnyError+=gEnc1ErrorLatch
gAnyError+=gEnc2ErrorLatch
gAnyError+=gEnc3ErrorLatch
gAnyError+=gEnc4ErrorLatch
gAnyError+=Motor[1].AmpFault
gAnyError+=Motor[2].AmpFault
gAnyError+=Motor[3].AmpFault
gAnyError+=Motor[4].AmpFault
gAnyError+=Motor[1].FeFatal
gAnyError+=Motor[2].FeFatal
gAnyError+=Motor[3].FeFatal
gAnyError+=Motor[4].FeFatal
if(inSERVO1READY==kOFF || inSERVO2READY==kOFF || inSERVO3READY==kOFF || inSERVO4READY==kOFF)
{
	gAnyError+=1
}

if (gAnyError != kOFF) {
  outBEACONRED = kON
} else {
  outBEACONRED = kOFF
}

Close
