// This PLC is used to change between possible move modes

Open PLC 3

// Ignore change request while moving
if (gMovementInProgress == kFALSE && gOpenGapExecuting == kFALSE && gMoveModeReq != gMoveMode) {

  gGapElevMoveRequest = 0          // Cancel any move request
  gGapMoveRequest = 0              // Cancel any move request
  gElevMoveRequest = 0              // Cancel any move request

  CMD"#*K"                          // Kill all motors for good measure

  CMD"&2 #1->0 #2->0 #3->0 #4->0"   // Remove motors from all CS
  CMD"&3 #1->0 #2->0 #3->0 #4->0"
  CMD"&4 #1->0 #2->0 #3->0 #4->0"
  CMD"&5 #1->0 #2->0 #3->0 #4->0"

  Motor[1].MasterCtrl=0             // Cancel all motor following
  Motor[2].MasterCtrl=0
  Motor[3].MasterCtrl=0
  Motor[4].MasterCtrl=0

  // MoveMode change
  switch (gMoveModeReq) {
    case kMoveModeGapEleSep:
      //CMD"&2 #1->I #2->I"
      //CMD"&3 #3->I #4->I"
      CMD"&2 #1->1000A - 500B"
      CMD"&2 #2->1000A + 500B"
      CMD"&3 #3->1000C - 500U"
      CMD"&3 #4->1000C + 500U"
      CMD"#*K"
      break;

    case kMoveModeGapEleComb:
      //CMD"&4 #1->I #2->I #3->I #4->I"   // Put motors in proper CS
//      CMD"&4 #1->kEncCtsPerUm*A - 0.5*kEncCtsPerUm*B"
//      CMD"&4 #2->kEncCtsPerUm*A + 0.5*kEncCtsPerUm*B"
//      CMD"&4 #3->kEncCtsPerUm*C - 0.5*kEncCtsPerUm*U"
//      CMD"&4 #4->kEncCtsPerUm*C + 0.5*kEncCtsPerUm*U"
      CMD"#*K"
      break;

    case kMoveModeFollowingUS:
      Motor[2].MasterCtrl=1
      Motor[4].MasterCtrl=1
      CMD"#*K"
      break;
    case kMoveModeFollowingDS:
      Motor[1].MasterCtrl=1             // Set upstream motors to follow downstream 
      Motor[3].MasterCtrl=1
      break;
    case kMoveModeIndividual:
      CMD"#*K"
      break;
    case kMoveModeOpenGapExecuting:
      // This mode is only used by the open gap PLC.
      // It is also configured there and probably should not be called here at all.
      //CMD"&5 #1->I #2->I"
      //CMD"&3 #3->I #4->I"
//      CMD"&5 #1->kEncCtsPerUm*A - 0.5*kEncCtsPerUm*B"
//      CMD"&5 #2->kEncCtsPerUm*A + 0.5*kEncCtsPerUm*B"
//      CMD"&3 #3->kEncCtsPerUm*C - 0.5*kEncCtsPerUm*U"
//      CMD"&3 #4->kEncCtsPerUm*C + 0.5*kEncCtsPerUm*U"
      CMD"#*K"
      break;
    case kMoveModeFlyScan:
      // Not implemented yet, do nothing
      CMD"#*K"
      GOTO 333
      break;

    default:
      // This is definitely a mistake
      GOTO 333
      break;
  }

  gMoveMode = gMoveModeReq
}


N333:
gMoveModeReq = gMoveMode
Close
