// This PLC should contain any stops related to girder safety from the
// controls point of view.  This includes a StopAll variable that can
// be set from epics, or internally if needed


Open PLC 9


// StopAll.  0 is the all clear, anything else and we stopall
if (gStopAllStatus != 0) {
  CMD"#*k"
}
if (gStopAllRequest == 1) {
  gStopAllStatus = 1
  gStopAllRequest = -1
  CMD"#*k"
}
if (gStopAllRequest == 0) {
  gStopAllStatus = 0
  gStopAllRequest = -1
}



// Check position, taper, elevation soft limits
local M1Pos
local M2Pos
local M3Pos
local M4Pos
local GAP
local TAPER
local ELEVATION
local TILT

M1Pos = Motor[1].ActPos - Motor[1].HomePos
M2Pos = Motor[2].ActPos - Motor[2].HomePos
M3Pos = Motor[3].ActPos - Motor[3].HomePos
M4Pos = Motor[4].ActPos - Motor[4].HomePos

GAP       = (M1Pos + M2Pos) / 2 / kEncCtsPerUm
TAPER     = (M2Pos - M1Pos) / kEncCtsPerUm
ELEVATION = (M3Pos + M4Pos) / 2 / kEncCtsPerUm
TILT      = (M4Pos - M3Pos) / kEncCtsPerUm

if (gGapError == kTRUE) {
    CMD"#1,2k"
} else {
  // Buffered soft-limits, non-buffered hard limits (if you get there you are OUT, call an expert).
  if (GAP < gMinGap - kBUFFERUM || GAP > gMaxGap + kBUFFERUM || GAP < kMINGAP || GAP > kMAXGAP) {
    CMD"#*k"
    gGapError = kTRUE
  }
  if (TAPER < gMinTaper - kBUFFERUM || TAPER > gMaxTaper + kBUFFERUM || TAPER > kMAXTAPER || TAPER < kMINTAPER) {
    CMD"#*k"
    gGapError = kTRUE
  }

  // Check Taper limit switches if limit disable is not true.
  // NOTE: here inTAPERPLIM has inverted polarity from what one might expect.
  if (inLIMITDISABLE == kFALSE && (inTAPERPLIM == kZERO || inTAPERMLIM == kZERO)) {
    CMD"#*k"
    gGapError = kTRUE
  }

  // Check Taper kill switches if kill disable is not true
  if (inKILLDISABLE == kFALSE && (inTAPERPKILL == kTRUE || inTAPERMKILL == kTRUE)) {
    CMD"#*k"
    gGapError = kTRUE
  }

}

if (gElevError == kTRUE) {
    CMD"#3,4k"
} else {
  // Buffered soft-limits, non-buffered hard limits (if you get there you are OUT, call an expert).
  if (ELEVATION > gMaxElev + kBUFFERUM || ELEVATION < gMinElev - kBUFFERUM || ELEVATION > kMAXELEV || ELEVATION < kMINELEV) {
    CMD"#*k"
    gElevError = kTRUE
  }
  if (TILT > gMaxTilt + kBUFFERUM || TILT < gMinTilt - kBUFFERUM || TILT > kMAXTILT || TILT < kMINTILT) {
    CMD"#*k"
    gElevError = kTRUE
  }
}



Close
