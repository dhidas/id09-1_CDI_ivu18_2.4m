record(ai, "Test") {
  field(DESC, "Steps per mm")
  field(EGU,  "step/mm")
  field(VAL,  "1000")
  #info(autosaveFields_pass0, "VAL")
  #info(autosaveFields, "VAL")
}


record(ai, "$(SYS){$(DEV)}P8197") {
  field(DTYP, "stream")
  field(DESC, "Motor1 Pos")
  field(SCAN, "1 second")
  field(EGU, "um")
  field(INP, "@pmac.proto getVar(P8197) $(PORT)")
  field(PREC, "3")
}


record(ao, "$(SYS){$(DEV)}MotorHomeRequest-SP") {
  field(DTYP, "stream")
  field(VAL,  "1")
  field(OUT, "@pmac.proto setVar(P600) $(PORT)")
  field(PINI, "NO")
}
record(mbbo, "$(SYS){$(DEV)}MotorToHome-SP") {
  field(DESC, "Which motor to home")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(ZRST, "None")
  field(ONST, "GU: Gap Upstream")
  field(TWST, "GD: Gap Downstream")
  field(THST, "EU: Elevation Upstream")
  field(FRST, "ED: Elevation Downstream")
  field(DTYP, "stream")
  field(VAL,  "0")
  field(PINI, "NO")
  field(OUT,  "@pmac.proto setIntVar(P602) $(PORT)")
}
record(mbbi, "$(SYS){$(DEV)}MotorHomingNow-RB") {
  field(DESC, "Which motor is homing")
  field(SCAN, "1 second")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(ZRST, "None")
  field(ONST, "GU: Gap Upstream")
  field(TWST, "GD: Gap Downstream")
  field(THST, "EU: Elevation Upstream")
  field(FRST, "ED: Elevation Downstream")
  field(DTYP, "stream")
  field(INP,  "@pmac.proto getIntVar(P603) $(PORT)")
}
record(bi, "$(SYS){$(DEV)}HomeInProgress-Sts") {
  field(DTYP, "stream")
  field(DESC, "Home in progress")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P601) $(PORT)")
  field(ZNAM, "Idle")
  field(ONAM, "Homing")
}
record(bi, "$(SYS){$(DEV)}HomeAmpError-Sts") {
  field(DTYP, "stream")
  field(DESC, "Amp enable error")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P698) $(PORT)")
  field(ZNAM, "No Error")
  field(ONAM, "ERROR")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)}HomeTimeout-Sts") {
  field(DTYP, "stream")
  field(DESC, "Homeing Timeout")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P699) $(PORT)")
  field(ZNAM, "No Error")
  field(ONAM, "Timeout ERROR")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-Ax:GU}Sw:HomeFlag-Sts") {
  field(DTYP, "stream")
  field(DESC, "Home Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(Gate3[0].Chan[0].HomeFlag) $(PORT)")
  field(ZNAM, "HomeSw inactive")
  field(ONAM, "HomeSw active")
}
record(bi, "$(SYS){$(DEV)-Ax:GD}Sw:HomeFlag-Sts") {
  field(DTYP, "stream")
  field(DESC, "Home Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(Gate3[0].Chan[1].HomeFlag) $(PORT)")
  field(ZNAM, "HomeSw inactive")
  field(ONAM, "HomeSw active")
}
record(bi, "$(SYS){$(DEV)-Ax:EU}Sw:HomeFlag-Sts") {
  field(DTYP, "stream")
  field(DESC, "Home Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(Gate3[0].Chan[2].HomeFlag) $(PORT)")
  field(ZNAM, "HomeSw inactive")
  field(ONAM, "HomeSw active")
}
record(bi, "$(SYS){$(DEV)-Ax:ED}Sw:HomeFlag-Sts") {
  field(DTYP, "stream")
  field(DESC, "Home Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(Gate3[0].Chan[3].HomeFlag) $(PORT)")
  field(ZNAM, "HomeSw inactive")
  field(ONAM, "HomeSw active")
}
record(ai, "$(SYS){$(DEV)-Ax:GU}HomeCapturedPos") {
  field(DTYP, "stream")
  field(DESC, "Home Switch Position")
  field(SCAN, "5 second")
  field(INP, "@pmac.proto getVar(Motor[1].CapturedPos) $(PORT)")
}
record(ai, "$(SYS){$(DEV)-Ax:GD}HomeCapturedPos") {
  field(DTYP, "stream")
  field(DESC, "Home Switch Position")
  field(SCAN, "5 second")
  field(INP, "@pmac.proto getVar(Motor[2].CapturedPos) $(PORT)")
}
record(ai, "$(SYS){$(DEV)-Ax:EU}HomeCapturedPos") {
  field(DTYP, "stream")
  field(DESC, "Home Switch Position")
  field(SCAN, "5 second")
  field(INP, "@pmac.proto getVar(Motor[3].CapturedPos) $(PORT)")
}
record(ai, "$(SYS){$(DEV)-Ax:ED}HomeCapturedPos") {
  field(DTYP, "stream")
  field(DESC, "Home Switch Position")
  field(SCAN, "5 second")
  field(INP, "@pmac.proto getVar(Motor[4].CapturedPos) $(PORT)")
}

record(bi, "$(SYS){$(DEV)-Ax:GU}Sw:PLim-Sts") {
  field(DTYP, "stream")
  field(DESC, "Open Limit Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(Motor[1].PlusLimit) $(PORT)")
  field(ZNAM, "LimSw inactive")
  field(ONAM, "LimSw active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-Ax:GU}Sw:MLim-Sts") {
  field(DTYP, "stream")
  field(DESC, "Close Limit Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(Motor[1].MinusLimit) $(PORT)")
  field(ZNAM, "LimSw inactive")
  field(ONAM, "LimSw active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-Ax:GD}Sw:PLim-Sts") {
  field(DTYP, "stream")
  field(DESC, "Open Limit Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(Motor[2].PlusLimit) $(PORT)")
  field(ZNAM, "LimSw inactive")
  field(ONAM, "LimSw active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-Ax:GD}Sw:MLim-Sts") {
  field(DTYP, "stream")
  field(DESC, "Close Limit Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(Motor[2].MinusLimit) $(PORT)")
  field(ZNAM, "LimSw inactive")
  field(ONAM, "LimSw active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-Ax:EU}Sw:PLim-Sts") {
  field(DTYP, "stream")
  field(DESC, "Elevation Upper Limit Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(Motor[3].PlusLimit) $(PORT)")
  field(ZNAM, "LimSw inactive")
  field(ONAM, "LimSw active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-Ax:EU}Sw:MLim-Sts") {
  field(DTYP, "stream")
  field(DESC, "Elevation Lower Limit Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(Motor[3].MinusLimit) $(PORT)")
  field(ZNAM, "LimSw inactive")
  field(ONAM, "LimSw active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-Ax:ED}Sw:PLim-Sts") {
  field(DTYP, "stream")
  field(DESC, "Elevation Upper Limit Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(Motor[4].PlusLimit) $(PORT)")
  field(ZNAM, "LimSw inactive")
  field(ONAM, "LimSw active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-Ax:ED}Sw:MLim-Sts") {
  field(DTYP, "stream")
  field(DESC, "Elevation Lower Limit Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(Motor[4].MinusLimit) $(PORT)")
  field(ZNAM, "LimSw inactive")
  field(ONAM, "LimSw active")
  field(OSV, "MAJOR")
}



record(ai, "$(SYS){$(DEV)}GapSpeed-RB") {
  field(DTYP, "stream")
  field(SCAN, "1 second")
  field(EGU,  "um/s")
  field(INP, "@pmac.proto getVar(P810) $(PORT)")
}

record(ao, "$(SYS){$(DEV)}GapSpeed-SP") {
  field(DTYP, "stream")
  field(EGU,  "um/s")
  field(VAL,  "500")
  field(DRVL, "1")
  field(DRVH, "500")
  field(OUT, "@pmac.proto setVar(P810) $(PORT)")
  field(PINI, "YES")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}

record(ai, "$(SYS){$(DEV)}ElevSpeed-RB") {
  field(DTYP, "stream")
  field(SCAN, "1 second")
  field(EGU,  "um/s")
  field(INP, "@pmac.proto getVar(P814) $(PORT)")
}

record(ao, "$(SYS){$(DEV)}ElevSpeed-SP") {
  field(DTYP, "stream")
  field(EGU,  "um/s")
  field(VAL,  "500")
  field(DRVL, "1")
  field(DRVH, "500")
  field(OUT, "@pmac.proto setVar(P814) $(PORT)")
  field(PINI, "YES")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}




record(ao, "$(SYS){$(DEV)-CS2:Gap}-Mtr-SP") {
  field(DTYP, "stream")
  field(DESC, "Motor position setpoint")
  field(EGU, "um")
  field(PREC, "2")
  field(DRVL, "-500")
  field(DRVH, "500")
  field(OUT, "@pmac.proto setVar(P805) $(PORT)")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}
record(bo, "$(SYS){$(DEV)-CS2:Gap}-Mtr-Go") {
  field(DESC, "Gap motor go")
  field(FLNK, "$(SYS){$(DEV)-CS2:Gap}-MvReq-Cmd.PROC")
}

record(ao, "$(SYS){$(DEV)-CS2:Gap}-Mtr-SP-Go") {
  field(DESC, "Motor position setpoint")
  field(EGU, "um")
  field(PREC, "2")
  field(DRVL, "-500")
  field(DRVH, "500")
  field(OUT, "$(SYS){$(DEV)-CS2:Gap}-Mtr-SP PP")
  field(FLNK, "$(SYS){$(DEV)-CS2:Gap}-MvReq-Cmd.PROC")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}

record(ao, "$(SYS){$(DEV)-CS2:Gap}-MvReq-Cmd") {
  field(DESC, "Trigers PLC to start gap movement")
  field(SCAN, "Passive")
  field(DTYP, "stream")
  field(VAL, "1")
  field(OUT, "@pmac.proto setVar(P809) $(PORT)")
}


record(ao, "$(SYS){$(DEV)-CS2:Taper}-Mtr-SP") {
  field(DTYP, "stream")
  field(DESC, "Taper setpoint")
  field(EGU, "um")
  field(PREC, "2")
  field(DRVL, "-500")
  field(DRVH, "500")
  field(OUT, "@pmac.proto setVar(P807) $(PORT)")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}

record(ao, "$(SYS){$(DEV)-CS2:Taper}-Mtr-SP-Go") {
  field(DESC, "Motor position setpoint")
  field(EGU, "um")
  field(PREC, "2")
  field(DRVL, "-500")
  field(DRVH, "500")
  field(OUT, "$(SYS){$(DEV)-CS2:Taper}-Mtr-SP PP")
  field(FLNK, "$(SYS){$(DEV)-CS2:Gap}-MvReq-Cmd.PROC")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}



record(ao, "$(SYS){$(DEV)-CS3:Elev}-Mtr-SP") {
  field(DTYP, "stream")
  field(DESC, "Motor position setpoint")
  field(EGU, "um")
  field(PREC, "2")
  field(DRVL, "-500")
  field(DRVH, "500")
  field(OUT, "@pmac.proto setVar(P806) $(PORT)")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}
record(bo, "$(SYS){$(DEV)-CS3:Elev}-Mtr-Go") {
  field(DESC, "Elev motor go")
  field(FLNK, "$(SYS){$(DEV)-CS3:Elev}-MvReq-Cmd.PROC")
}

record(ao, "$(SYS){$(DEV)-CS3:Elev}-Mtr-SP-Go") {
  field(DESC, "Motor position setpoint")
  field(EGU, "um")
  field(PREC, "2")
  field(DRVL, "-500")
  field(DRVH, "500")
  field(OUT, "$(SYS){$(DEV)-CS3:Elev}-Mtr-SP PP")
  field(FLNK, "$(SYS){$(DEV)-CS3:Elev}-MvReq-Cmd.PROC")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}

record(ao, "$(SYS){$(DEV)-CS3:Elev}-MvReq-Cmd") {
  field(DESC, "Trigers PLC to start gap movement")
  field(SCAN, "Passive")
  field(DTYP, "stream")
  field(VAL, "1")
  field(OUT, "@pmac.proto setVar(P812) $(PORT)")
}


record(ao, "$(SYS){$(DEV)-CS3:Tilt}-Mtr-SP") {
  field(DTYP, "stream")
  field(DESC, "Tilt setpoint")
  field(EGU, "um")
  field(PREC, "2")
  field(DRVL, "-500")
  field(DRVH, "500")
  field(OUT, "@pmac.proto setVar(P808) $(PORT)")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}

record(ao, "$(SYS){$(DEV)-CS3:Tilt}-Mtr-SP-Go") {
  field(DESC, "Motor position setpoint")
  field(EGU, "um")
  field(PREC, "2")
  field(DRVL, "-500")
  field(DRVH, "500")
  field(OUT, "$(SYS){$(DEV)-CS3:Tilt}-Mtr-SP PP")
  field(FLNK, "$(SYS){$(DEV)-CS3:Elev}-MvReq-Cmd.PROC")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}




record(mbbi, "$(SYS){$(DEV)}GirderMode-RB") {
  field(DESC, "Girder axis state")
  field(SCAN, "2 second")
  field(DTYP, "stream")
  field(INP, "@pmac.proto getIntVar(P300) $(PORT)")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "5")
  field(ZRST, "Gap Elevation Separate")
  field(ONST, "All Together")
  field(TWST, "Following US")
  field(THST, "Following DS")
  field(FRST, "Individual")
  field(FVST, "FlyScan")
  field(SXST, "Open Gap Executing")
}

record(mbbo, "$(SYS){$(DEV)}GirderMode-SP") {
  field(DESC, "Girder axis requested state")
  field(SCAN, "Passive")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(ZRST, "Gap Elevation Separate")
  field(ONST, "All Together")
  field(TWST, "Following US")
  field(THST, "Following DS")
  field(FRST, "Individual")
  field(FVST, "FlyScan")
  field(DTYP, "stream")
  field(OUT,  "@pmac.proto setIntVar(P301) $(PORT)")
  field(FLNK, "$(SYS){$(DEV)}GirderMode-RB")
  field(PINI, "YES")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}




record(ai, "$(SYS){$(DEV)-CS2:Gap}MinGap-RB") {
  field(DTYP, "stream")
  field(DESC, "Maximum Gap")
  field(SCAN, "5 second")
  field(EGU, "um")
  field(INP, "@pmac.proto getVar(P902) $(PORT)")
  field(FLNK, "$(SYS){$(DEV)-CS2:Gap}MinGap-Pass")
  field(PINI, "RUNNING")
  field(PREC, "0")
}
record(ao, "$(SYS){$(DEV)-CS2:Gap}MinGap-SP") {
  field(DTYP, "stream")
  field(DESC, "Maximum Gap")
  field(SCAN, "Passive")
  field(FLNK, "$(SYS){$(DEV)-CS2:Gap}MinGap-RB")
  field(EGU, "um")
  field(OUT, "@pmac.proto setVar(P902) $(PORT)")
  field(PREC, "0")
  field(PINI, "YES")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}
record(transform, "$(SYS){$(DEV)-CS2:Gap}MinGap-Pass") {
  field(SCAN, "Passive")
  field(INPA, "$(SYS){$(DEV)-CS2:Gap}MinGap-RB")
  field(OUTA, "$(SYS){$(DEV)-CS2:Gap}-Mtr-SP.DRVH")
  field(CLCA, "A")
  field(CLCB, "A")
  field(CLCC, "A")
  field(OUTB, "$(SYS){$(DEV)-CS2:Gap}-Mtr-SP-Go.DRVH")
  field(OUTC, "$(SYS){$(DEV)-CS2:Gap}-Mtr.HLM")
}
record(ai, "$(SYS){$(DEV)-CS2:Gap}MaxGap-RB") {
  field(DTYP, "stream")
  field(DESC, "Maximum Gap")
  field(SCAN, "5 second")
  field(EGU, "um")
  field(INP, "@pmac.proto getVar(P903) $(PORT)")
  field(FLNK, "$(SYS){$(DEV)-CS2:Gap}MaxGap-Pass")
  field(PINI, "RUNNING")
  field(PREC, "0")
}
record(ao, "$(SYS){$(DEV)-CS2:Gap}MaxGap-SP") {
  field(DTYP, "stream")
  field(DESC, "Maximum Gap")
  field(SCAN, "Passive")
  field(FLNK, "$(SYS){$(DEV)-CS2:Gap}MaxGap-RB")
  field(EGU, "um")
  field(OUT, "@pmac.proto setVar(P903) $(PORT)")
  field(PREC, "0")
  field(PINI, "YES")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}
record(transform, "$(SYS){$(DEV)-CS2:Gap}MaxGap-Pass") {
  field(SCAN, "Passive")
  field(INPA, "$(SYS){$(DEV)-CS2:Gap}MaxGap-RB")
  field(OUTA, "$(SYS){$(DEV)-CS2:Gap}-Mtr-SP.DRVH")
  field(CLCA, "A")
  field(CLCB, "A")
  field(CLCC, "A")
  field(OUTB, "$(SYS){$(DEV)-CS2:Gap}-Mtr-SP-Go.DRVH")
  field(OUTC, "$(SYS){$(DEV)-CS2:Gap}-Mtr.HLM")
}

record(ai, "$(SYS){$(DEV)-CS2:Taper}MinTaper-RB") {
  field(DTYP, "stream")
  field(DESC, "Maximum Taper")
  field(SCAN, "5 second")
  field(EGU, "um")
  field(INP, "@pmac.proto getVar(P904) $(PORT)")
  field(FLNK, "$(SYS){$(DEV)-CS2:Taper}MinTaper-Pass")
  field(PINI, "RUNNING")
  field(PREC, "0")
}
record(ao, "$(SYS){$(DEV)-CS2:Taper}MinTaper-SP") {
  field(DTYP, "stream")
  field(DESC, "Maximum Taper")
  field(SCAN, "Passive")
  field(FLNK, "$(SYS){$(DEV)-CS2:Taper}MinTaper-RB")
  field(EGU, "um")
  field(OUT, "@pmac.proto setVar(P904) $(PORT)")
  field(PREC, "0")
  field(PINI, "YES")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}
record(transform, "$(SYS){$(DEV)-CS2:Taper}MinTaper-Pass") {
  field(SCAN, "Passive")
  field(INPA, "$(SYS){$(DEV)-CS2:Taper}MinTaper-RB")
  field(OUTA, "$(SYS){$(DEV)-CS2:Taper}-Mtr-SP.DRVH")
  field(CLCA, "A")
  field(CLCB, "A")
  field(CLCC, "A")
  field(OUTB, "$(SYS){$(DEV)-CS2:Taper}-Mtr-SP-Go.DRVH")
  field(OUTC, "$(SYS){$(DEV)-CS2:Taper}-Mtr.HLM")
}
record(ai, "$(SYS){$(DEV)-CS2:Taper}MaxTaper-RB") {
  field(DTYP, "stream")
  field(DESC, "Maximum Taper")
  field(SCAN, "5 second")
  field(EGU, "um")
  field(INP, "@pmac.proto getVar(P905) $(PORT)")
  field(FLNK, "$(SYS){$(DEV)-CS2:Taper}MaxTaper-Pass")
  field(PINI, "RUNNING")
  field(PREC, "0")
}
record(ao, "$(SYS){$(DEV)-CS2:Taper}MaxTaper-SP") {
  field(DTYP, "stream")
  field(DESC, "Maximum Taper")
  field(SCAN, "Passive")
  field(FLNK, "$(SYS){$(DEV)-CS2:Taper}MaxTaper-RB")
  field(EGU, "um")
  field(OUT, "@pmac.proto setVar(P905) $(PORT)")
  field(PREC, "0")
  field(PINI, "YES")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}
record(transform, "$(SYS){$(DEV)-CS2:Taper}MaxTaper-Pass") {
  field(SCAN, "Passive")
  field(INPA, "$(SYS){$(DEV)-CS2:Taper}MaxTaper-RB")
  field(OUTA, "$(SYS){$(DEV)-CS2:Taper}-Mtr-SP.DRVH")
  field(CLCA, "A")
  field(CLCB, "A")
  field(CLCC, "A")
  field(OUTB, "$(SYS){$(DEV)-CS2:Taper}-Mtr-SP-Go.DRVH")
  field(OUTC, "$(SYS){$(DEV)-CS2:Taper}-Mtr.HLM")
}

record(ai, "$(SYS){$(DEV)-CS3:Elev}MinElev-RB") {
  field(DTYP, "stream")
  field(DESC, "Minimum Elev")
  field(SCAN, "5 second")
  field(EGU, "um")
  field(INP, "@pmac.proto getVar(P906) $(PORT)")
  field(FLNK, "$(SYS){$(DEV)-CS3:Elev}MinElev-Pass")
  field(PINI, "RUNNING")
  field(PREC, "0")
}
record(ao, "$(SYS){$(DEV)-CS3:Elev}MinElev-SP") {
  field(DTYP, "stream")
  field(DESC, "Minimum Elev")
  field(SCAN, "Passive")
  field(FLNK, "$(SYS){$(DEV)-CS3:Elev}MinElev-RB")
  field(EGU, "um")
  field(OUT, "@pmac.proto setVar(P906) $(PORT)")
  field(PREC, "0")
  field(PINI, "YES")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}
record(transform, "$(SYS){$(DEV)-CS3:Elev}MinElev-Pass") {
  field(SCAN, "Passive")
  field(INPA, "$(SYS){$(DEV)-CS3:Elev}MinElev-RB")
  field(OUTA, "$(SYS){$(DEV)-CS3:Elev}-Mtr-SP.DRVH")
  field(CLCA, "A")
  field(CLCB, "A")
  field(CLCC, "A")
  field(OUTB, "$(SYS){$(DEV)-CS3:Elev}-Mtr-SP-Go.DRVH")
  field(OUTC, "$(SYS){$(DEV)-CS3:Elev}-Mtr.HLM")
}
record(ai, "$(SYS){$(DEV)-CS3:Elev}MaxElev-RB") {
  field(DTYP, "stream")
  field(DESC, "Maximum Elev")
  field(SCAN, "5 second")
  field(EGU, "um")
  field(INP, "@pmac.proto getVar(P907) $(PORT)")
  field(FLNK, "$(SYS){$(DEV)-CS3:Elev}MaxElev-Pass")
  field(PINI, "RUNNING")
  field(PREC, "0")
}
record(ao, "$(SYS){$(DEV)-CS3:Elev}MaxElev-SP") {
  field(DTYP, "stream")
  field(DESC, "Maximum Elev")
  field(SCAN, "Passive")
  field(FLNK, "$(SYS){$(DEV)-CS3:Elev}MaxElev-RB")
  field(EGU, "um")
  field(OUT, "@pmac.proto setVar(P907) $(PORT)")
  field(PREC, "0")
  field(PINI, "YES")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}
record(transform, "$(SYS){$(DEV)-CS3:Elev}MaxElev-Pass") {
  field(SCAN, "Passive")
  field(INPA, "$(SYS){$(DEV)-CS3:Elev}MaxElev-RB")
  field(OUTA, "$(SYS){$(DEV)-CS3:Elev}-Mtr-SP.DRVH")
  field(CLCA, "A")
  field(CLCB, "A")
  field(CLCC, "A")
  field(OUTB, "$(SYS){$(DEV)-CS3:Elev}-Mtr-SP-Go.DRVH")
  field(OUTC, "$(SYS){$(DEV)-CS3:Elev}-Mtr.HLM")
}

record(ai, "$(SYS){$(DEV)-CS3:Tilt}MinTilt-RB") {
  field(DTYP, "stream")
  field(DESC, "Minimum Tilt")
  field(SCAN, "5 second")
  field(EGU, "um")
  field(INP, "@pmac.proto getVar(P908) $(PORT)")
  field(FLNK, "$(SYS){$(DEV)-CS3:Tilt}MinTilt-Pass")
  field(PINI, "RUNNING")
  field(PREC, "0")
}
record(ao, "$(SYS){$(DEV)-CS3:Tilt}MinTilt-SP") {
  field(DTYP, "stream")
  field(DESC, "Minimum Tilt")
  field(SCAN, "Passive")
  field(FLNK, "$(SYS){$(DEV)-CS3:Tilt}MinTilt-RB")
  field(EGU, "um")
  field(OUT, "@pmac.proto setVar(P908) $(PORT)")
  field(PREC, "0")
  field(PINI, "YES")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}
record(transform, "$(SYS){$(DEV)-CS3:Tilt}MinTilt-Pass") {
  field(SCAN, "Passive")
  field(INPA, "$(SYS){$(DEV)-CS3:Tilt}MinTilt-RB")
  field(OUTA, "$(SYS){$(DEV)-CS3:Tilt}-Mtr-SP.DRVH")
  field(CLCA, "A")
  field(CLCB, "A")
  field(CLCC, "A")
  field(OUTB, "$(SYS){$(DEV)-CS3:Tilt}-Mtr-SP-Go.DRVH")
  field(OUTC, "$(SYS){$(DEV)-CS3:Tilt}-Mtr.HLM")
}
record(ai, "$(SYS){$(DEV)-CS3:Tilt}MaxTilt-RB") {
  field(DTYP, "stream")
  field(DESC, "Maximum Tilt")
  field(SCAN, "5 second")
  field(EGU, "um")
  field(INP, "@pmac.proto getVar(P909) $(PORT)")
  field(FLNK, "$(SYS){$(DEV)-CS3:Tilt}MaxTilt-Pass")
  field(PINI, "RUNNING")
  field(PREC, "0")
}
record(ao, "$(SYS){$(DEV)-CS3:Tilt}MaxTilt-SP") {
  field(DTYP, "stream")
  field(DESC, "Maximum Tilt")
  field(SCAN, "Passive")
  field(FLNK, "$(SYS){$(DEV)-CS3:Tilt}MaxTilt-RB")
  field(EGU, "um")
  field(OUT, "@pmac.proto setVar(P909) $(PORT)")
  field(PREC, "0")
  field(PINI, "YES")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}
record(transform, "$(SYS){$(DEV)-CS3:Tilt}MaxTilt-Pass") {
  field(SCAN, "Passive")
  field(INPA, "$(SYS){$(DEV)-CS3:Tilt}MaxTilt-RB")
  field(OUTA, "$(SYS){$(DEV)-CS3:Tilt}-Mtr-SP.DRVH")
  field(CLCA, "A")
  field(CLCB, "A")
  field(CLCC, "A")
  field(OUTB, "$(SYS){$(DEV)-CS3:Tilt}-Mtr-SP-Go.DRVH")
  field(OUTC, "$(SYS){$(DEV)-CS3:Tilt}-Mtr.HLM")
}


record(bi, "$(SYS){$(DEV)}GapError-Sts") {
  field(DTYP, "stream")
  field(DESC, "Gap Error status")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P998) $(PORT)")
  field(ZNAM, "No Eror")
  field(ONAM, "Gap error")
  field(OSV, "MAJOR")
}
record(bo, "$(SYS){$(DEV)}GapError-Reset") {
  field(DTYP, "stream")
  field(VAL, "0")
  field(DESC, "Reset gap error")
  field(OUT, "@pmac.proto setIntVar(P998) $(PORT)")
}

record(bi, "$(SYS){$(DEV)}ElevError-Sts") {
  field(DTYP, "stream")
  field(DESC, "Elevation Error status")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P999) $(PORT)")
  field(ZNAM, "No Eror")
  field(ONAM, "Elevation error")
  field(OSV, "MAJOR")
}
record(bo, "$(SYS){$(DEV)}ElevError-Reset") {
  field(DTYP, "stream")
  field(VAL, "0")
  field(DESC, "Reset elevation error")
  field(OUT, "@pmac.proto setIntVar(P999) $(PORT)")
}








record(bi, "$(SYS){$(DEV)-Ax:GU}Sw:ServoReady-Sts") {
  field(DTYP, "stream")
  field(DESC, "Servo Ready")
  field(SCAN, "1 second")
  field(INP,  "@pmac.proto getIntVar(M24) $(PORT)")
  field(ZNAM, "NOT READY")
  field(ONAM, "READY")
}
record(bi, "$(SYS){$(DEV)-Ax:GD}Sw:ServoReady-Sts") {
  field(DTYP, "stream")
  field(DESC, "Servo Ready")
  field(SCAN, "1 second")
  field(INP,  "@pmac.proto getIntVar(M23) $(PORT)")
  field(ZNAM, "NOT READY")
  field(ONAM, "READY")
}
record(bi, "$(SYS){$(DEV)-Ax:EU}Sw:ServoReady-Sts") {
  field(DTYP, "stream")
  field(DESC, "Servo Ready")
  field(SCAN, "1 second")
  field(INP,  "@pmac.proto getIntVar(M22) $(PORT)")
  field(ZNAM, "NOT READY")
  field(ONAM, "READY")
}
record(bi, "$(SYS){$(DEV)-Ax:ED}Sw:ServoReady-Sts") {
  field(DTYP, "stream")
  field(DESC, "Servo Ready")
  field(SCAN, "1 second")
  field(INP,  "@pmac.proto getIntVar(M21) $(PORT)")
  field(ZNAM, "NOT READY")
  field(ONAM, "READY")
}
record(bi, "$(SYS){$(DEV)}Sw:KillDisable-Sts") {
  field(DTYP, "stream")
  field(DESC, "Kill switches disabled")
  field(SCAN, "1 second")
  field(INP,  "@pmac.proto getIntVar(M16) $(PORT)")
  field(ZNAM, "Normal")
  field(ONAM, "KILLs DISABLED")
  field(OSV,  "MAJOR")
}


record(bo, "$(SYS){$(DEV)-Ax:GU}Sw:AmpClr-SP") {
  field(DTYP, "stream")
  field(DESC, "Amp Clear")
  field(ZNAM, "0")
  field(ONAM, "1")
  field(HIGH, "0.5")
  field(SCAN, "Passive")
  field(OUT, "@pmac.proto setIntVar(M25) $(PORT)")
}
record(bo, "$(SYS){$(DEV)-Ax:GD}Sw:AmpClr-SP") {
  field(DTYP, "stream")
  field(DESC, "Amp Clear")
  field(ZNAM, "0")
  field(ONAM, "1")
  field(HIGH, "0.5")
  field(SCAN, "Passive")
  field(OUT, "@pmac.proto setIntVar(M26) $(PORT)")
}
record(bo, "$(SYS){$(DEV)-Ax:EU}Sw:AmpClr-SP") {
  field(DTYP, "stream")
  field(DESC, "Amp Clear")
  field(ZNAM, "0")
  field(ONAM, "1")
  field(HIGH, "0.5")
  field(SCAN, "Passive")
  field(OUT, "@pmac.proto setIntVar(M27) $(PORT)")
}
record(bo, "$(SYS){$(DEV)-Ax:ED}Sw:AmpClr-SP") {
  field(DTYP, "stream")
  field(DESC, "Amp Clear")
  field(ZNAM, "0")
  field(ONAM, "1")
  field(HIGH, "0.5")
  field(SCAN, "Passive")
  field(OUT, "@pmac.proto setIntVar(M28) $(PORT)")
}


record(bi, "$(SYS){$(DEV)-Ax:GU}Sw:PKill-Sts") {
  field(DTYP, "stream")
  field(DESC, "Open Kill Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(M1) $(PORT)")
  field(ZNAM, "KillSw inactive")
  field(ONAM, "KillSw active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-Ax:GU}Sw:MKill-Sts") {
  field(DTYP, "stream")
  field(DESC, "Close Kill Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(M2) $(PORT)")
  field(ZNAM, "KillSw inactive")
  field(ONAM, "KillSw active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-Ax:GD}Sw:PKill-Sts") {
  field(DTYP, "stream")
  field(DESC, "Open Kill Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(M3) $(PORT)")
  field(ZNAM, "KillSw inactive")
  field(ONAM, "KillSw active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-Ax:GD}Sw:MKill-Sts") {
  field(DTYP, "stream")
  field(DESC, "Close Kill Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(M4) $(PORT)")
  field(ZNAM, "KillSw inactive")
  field(ONAM, "KillSw active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-Ax:EU}Sw:PKill-Sts") {
  field(DTYP, "stream")
  field(DESC, "Elevation Upper Kill Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(M5) $(PORT)")
  field(ZNAM, "KillSw inactive")
  field(ONAM, "KillSw active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-Ax:EU}Sw:MKill-Sts") {
  field(DTYP, "stream")
  field(DESC, "Elevation Lower Kill Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(M6) $(PORT)")
  field(ZNAM, "KillSw inactive")
  field(ONAM, "KillSw active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-Ax:ED}Sw:PKill-Sts") {
  field(DTYP, "stream")
  field(DESC, "Elevation Upper Kill Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(M7) $(PORT)")
  field(ZNAM, "KillSw inactive")
  field(ONAM, "KillSw active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-Ax:ED}Sw:MKill-Sts") {
  field(DTYP, "stream")
  field(DESC, "Elevation Lower Kill Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(M8) $(PORT)")
  field(ZNAM, "KillSw inactive")
  field(ONAM, "KillSw active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-CS2:Taper}Sw:PKill-Sts") {
  field(DTYP, "stream")
  field(DESC, "Taper Positive Kill Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(M9) $(PORT)")
  field(ZNAM, "KillSw inactive")
  field(ONAM, "KillSw active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-CS2:Taper}Sw:MKill-Sts") {
  field(DTYP, "stream")
  field(DESC, "Taper Minus Kill Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(M10) $(PORT)")
  field(ZNAM, "KillSw inactive")
  field(ONAM, "KillSw active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)}Sw:UEStop-Sts") {
  field(DTYP, "stream")
  field(DESC, "Upstream E-Stop Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(M11) $(PORT)")
  field(ZNAM, "E-Stop inactive")
  field(ONAM, "E-Stop active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)}Sw:DEStop-Sts") {
  field(DTYP, "stream")
  field(DESC, "Downstream E-Stop Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(M12) $(PORT)")
  field(ZNAM, "E-Stop inactive")
  field(ONAM, "E-Stop active")
  field(OSV, "MAJOR")
}
record(calc, "$(SYS){$(DEV)}Sw:EStop-Any") {
  field(DESC, "Or of all E-Stops")
  field(INPA, "$(SYS){$(DEV)}Sw:UEStop-Sts CP")
  field(INPB, "$(SYS){$(DEV)}Sw:DEStop-Sts CP")
  field(CALC, "A || B")
}



record(bi, "$(SYS){$(DEV)-CS2:Taper}Sw:PLim-Sts") {
  field(DTYP, "stream")
  field(DESC, "Taper Positive Limit Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(M13) $(PORT)")
  field(ZNAM, "KillSw inactive")
  field(ONAM, "KillSw active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-CS2:Taper}Sw:MLim-Sts") {
  field(DTYP, "stream")
  field(DESC, "Taper Minus Limit Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(M15) $(PORT)")
  field(ZNAM, "KillSw inactive")
  field(ONAM, "KillSw active")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)}Sw:KillDisable-Sts") {
  field(DTYP, "stream")
  field(DESC, "Kill Disable Key Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(M16) $(PORT)")
  field(ZNAM, "Kills active (normal)")
  field(ONAM, "WARNING: deactivated")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)}Sw:LimDisable-Sts") {
  field(DTYP, "stream")
  field(DESC, "Limit Disable Key Switch")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(M17) $(PORT)")
  field(ZNAM, "Limits active (normal)")
  field(ONAM, "WARNING: deactivated")
  field(OSV, "MAJOR")
}




record(bo, "$(SYS){$(DEV)}LEncError-Reset") {
  field(DTYP, "stream")
  field(VAL, "1")
  field(DESC, "Reset LEnc errors")
  field(OUT, "@pmac.proto setIntVar(P1001) $(PORT)")
}
record(ai, "$(SYS){$(DEV)}LEncPLCCounts") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder warnings")
  field(SCAN, "1 second")
  field(INP,  "@pmac.proto getIntVar(P1000) $(PORT)")
}
record(bi, "$(SYS){$(DEV)-Ax:GU}LEnc-Sts") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder error status")
  field(SCAN, "1 second")
  field(INP,  "@pmac.proto getIntVar(P1018) $(PORT)")
  field(ZNAM, "No error")
  field(ONAM, "ERROR")
  field(OSV,  "MAJOR")
}
record(bi, "$(SYS){$(DEV)-Ax:GD}LEnc-Sts") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder error status")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P1019) $(PORT)")
  field(ZNAM, "No error")
  field(ONAM, "ERROR")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-Ax:EU}LEnc-Sts") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder error status")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P1020) $(PORT)")
  field(ZNAM, "No error")
  field(ONAM, "ERROR")
  field(OSV, "MAJOR")
}
record(bi, "$(SYS){$(DEV)-Ax:ED}LEnc-Sts") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder error status")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P1021) $(PORT)")
  field(ZNAM, "No error")
  field(ONAM, "ERROR")
  field(OSV, "MAJOR")
}
record(calc, "$(SYS){$(DEV)}LEncError-Any") {
  field(DESC, "Or of all lenc errorss")
  field(INPA, "$(SYS){$(DEV)-Ax:GU}LEnc-Sts CP")
  field(INPB, "$(SYS){$(DEV)-Ax:GD}LEnc-Sts CP")
  field(INPC, "$(SYS){$(DEV)-Ax:EU}LEnc-Sts CP")
  field(INPD, "$(SYS){$(DEV)-Ax:ED}LEnc-Sts CP")
  field(CALC, "A || B || C || D")
}

record(ai, "$(SYS){$(DEV)-Ax:GU}LEnc-Warnings") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder warnings")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P1002) $(PORT)")
}
record(ai, "$(SYS){$(DEV)-Ax:GD}LEnc-Warnings") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder warnings")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P1003) $(PORT)")
}
record(ai, "$(SYS){$(DEV)-Ax:EU}LEnc-Warnings") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder warnings")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P1004) $(PORT)")
}
record(ai, "$(SYS){$(DEV)-Ax:ED}LEnc-Warnings") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder warnings")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P1005) $(PORT)")
}
record(ai, "$(SYS){$(DEV)-Ax:GU}LEnc-Errors") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder Errors")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P1006) $(PORT)")
}
record(ai, "$(SYS){$(DEV)-Ax:GD}LEnc-Errors") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder Errors")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P1007) $(PORT)")
}
record(ai, "$(SYS){$(DEV)-Ax:EU}LEnc-Errors") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder Errors")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P1008) $(PORT)")
  field(ZNAM, "No error")
  field(ONAM, "ERROR")
  field(OSV, "MAJOR")
}
record(ai, "$(SYS){$(DEV)-Ax:ED}LEnc-Errors") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder Errors")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P1009) $(PORT)")
}
record(ai, "$(SYS){$(DEV)-Ax:GU}LEnc-CRCErrors") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder CRCErrors")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P1010) $(PORT)")
}
record(ai, "$(SYS){$(DEV)-Ax:GD}LEnc-CRCErrors") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder CRCErrors")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P1011) $(PORT)")
}
record(ai, "$(SYS){$(DEV)-Ax:EU}LEnc-CRCErrors") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder CRCErrors")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P1012) $(PORT)")
}
record(ai, "$(SYS){$(DEV)-Ax:ED}LEnc-CRCErrors") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder CRCErrors")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P1013) $(PORT)")
}
record(ai, "$(SYS){$(DEV)-Ax:GU}LEnc-Timeouts") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder Timeouts")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P1014) $(PORT)")
}
record(ai, "$(SYS){$(DEV)-Ax:GD}LEnc-Timeouts") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder Timeouts")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P1015) $(PORT)")
}
record(ai, "$(SYS){$(DEV)-Ax:EU}LEnc-Timeouts") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder Timeouts")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P1016) $(PORT)")
}
record(ai, "$(SYS){$(DEV)-Ax:ED}LEnc-Timeouts") {
  field(DTYP, "stream")
  field(DESC, "Linear encoder Timeouts")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P1017) $(PORT)")
}






record(bi, "$(SYS){$(DEV)}StopAll-Sts") {
  field(DTYP, "stream")
  field(DESC, "StopAll status")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(P900) $(PORT)")
  field(ZNAM, "No Eror")
  field(ONAM, "All Motion Stopped")
  field(OSV, "MAJOR")
}
record(bo, "$(SYS){$(DEV)}StopAll-Req") {
  field(DTYP, "stream")
  field(VAL, "0")
  field(DESC, "Stop all or request reset")
  field(ZNAM, "Request Reset")
  field(ONAM, "Request StopAll")
  field(OUT, "@pmac.proto setIntVar(P901) $(PORT)")
}


record(ai, "$(SYS){$(DEV)}BrakeTimer") {
  field(DTYP, "stream")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getVar(Sys.CdTimer[130]) $(PORT)")
}


record(ai, "$(SYS){$(DEV)}BrakeTimeout-RB") {
  field(DTYP, "stream")
  field(SCAN, "1 second")
  field(EGU,  "s")
  field(INP, "@pmac.proto getVar(P1301) $(PORT)")
}


record(ao, "$(SYS){$(DEV)}BrakeTimeout-SP") {
  field(DTYP, "stream")
  field(EGU,  "s")
  field(DRVL, "1")
  field(DRVH, "300")
  field(PINI, "YES")
  field(OUT, "@pmac.proto setVar(P1301) $(PORT)")
  info(autosaveFields_pass0, "VAL")
  info(autosaveFields, "VAL")
}


record(ao, "$(SYS){$(DEV)}AllBrakesDisengaged-SP") {
  field(DTYP, "stream")
  field(DESC, "disengage all brakes")
  field(OUT,  "@pmac.proto setIntVar(P1500) $(PORT)")
}
record(bi, "$(SYS){$(DEV)}AllBrakesDisengaged-Sts") {
  field(DTYP, "stream")
  field(DESC, "All Brakes Disabled sts")
  field(SCAN, ".5 second")
  field(INP, "@pmac.proto getIntVar(P1501) $(PORT)")
  field(ZNAM, "Some brakes engaged")
  field(ONAM, "Brakes disengaged")
}
record(ao, "$(SYS){$(DEV)}GapBrakesDisengaged-SP") {
  field(DTYP, "stream")
  field(DESC, "disengage gap brakes")
  field(OUT,  "@pmac.proto setIntVar(P1502) $(PORT)")
}
record(bi, "$(SYS){$(DEV)}GapBrakesDisengaged-Sts") {
  field(DTYP, "stream")
  field(DESC, "Brakes Disabled sts")
  field(SCAN, ".5 second")
  field(INP, "@pmac.proto getIntVar(P1503) $(PORT)")
  field(ZNAM, "Some brakes engaged")
  field(ONAM, "Brakes disengaged")
}
record(ao, "$(SYS){$(DEV)}ElevBrakesDisengaged-SP") {
  field(DTYP, "stream")
  field(DESC, "disengage elev brakes")
  field(OUT,  "@pmac.proto setIntVar(P1504) $(PORT)")
}
record(bi, "$(SYS){$(DEV)}ElevBrakesDisengaged-Sts") {
  field(DTYP, "stream")
  field(DESC, "Brakes Disabled sts")
  field(SCAN, ".5 second")
  field(INP, "@pmac.proto getIntVar(P1505) $(PORT)")
  field(ZNAM, "Some brakes engaged")
  field(ONAM, "Brakes disengaged")
}





record(bo, "$(SYS){$(DEV)}OpenGap-Request") {
  field(DTYP, "stream")
  field(VAL, "1")
  field(DESC, "Emergency open gap")
  field(PINI, "NO")
  field(OUT, "@pmac.proto setIntVar(P400) $(PORT)")
}
record(bi, "$(SYS){$(DEV)}OpenGapExecuting-RB") {
  field(DTYP, "stream")
  field(DESC, "Open Gap Executing")
  field(SCAN, "2 second")
  field(INP, "@pmac.proto getIntVar(P401) $(PORT)")
  field(ZNAM, "Normal")
  field(ONAM, "Open Executing")
  field(OSV, "MAJOR")
}
record(bo, "$(SYS){$(DEV)}OpenGapExecuting-Reset") {
  field(DTYP, "stream")
  field(VAL, "0")
  field(DESC, "Reset open gap")
  field(OUT, "@pmac.proto setIntVar(P401) $(PORT)")
}
record(bi, "$(SYS){$(DEV)}OpenGapTimeout-RB") {
  field(DTYP, "stream")
  field(DESC, "Open Gap Executing Timeout")
  field(SCAN, "5 second")
  field(INP, "@pmac.proto getIntVar(P402) $(PORT)")
  field(ZNAM, "No timeout")
  field(ONAM, "Gap Open Timeout")
  field(OSV, "MAJOR")
}


